# =============================================================================
# LegacyKeep Legacy Service Configuration
# =============================================================================

# Application Configuration
spring.application.name=legacy-service
server.port=8085
spring.main.allow-bean-definition-overriding=true
server.servlet.context-path=/api/v1

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database
spring.datasource.url=jdbc:postgresql://localhost:5432/legacy_db
spring.datasource.username=${DB_USERNAME:legacykeep}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Flyway Database Migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true

# =============================================================================
# Kafka Configuration
# =============================================================================

# Kafka Bootstrap Servers
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

# Consumer Configuration
spring.kafka.consumer.group-id=legacy-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.legacykeep.*
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Kafka Topics
legacy.kafka.topics.legacy-events=legacy-events
legacy.kafka.topics.content-events=content-events
legacy.kafka.topics.inheritance-events=inheritance-events

# =============================================================================
# Redis Configuration
# =============================================================================

# Redis Connection
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.database=0

# Redis Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# =============================================================================
# File Storage Configuration
# =============================================================================

# File Storage Settings
legacy.storage.type=${STORAGE_TYPE:local}
legacy.storage.local.path=${STORAGE_PATH:/tmp/legacy-content}
legacy.storage.max-file-size=100MB
legacy.storage.allowed-extensions=jpg,jpeg,png,gif,mp4,avi,mov,mp3,wav,pdf,doc,docx,txt

# Content Processing
legacy.content.processing.enabled=true
legacy.content.processing.image.max-width=1920
legacy.content.processing.image.max-height=1080
legacy.content.processing.video.max-duration=300
legacy.content.processing.audio.max-duration=600

# =============================================================================
# Security Configuration
# =============================================================================

# JWT Configuration
legacy.jwt.secret=${JWT_SECRET:legacykeep-legacy-secret-key}
legacy.jwt.expiration=${JWT_EXPIRATION:900000}

# Service Authentication
legacy.security.enabled=true
legacy.security.service-token=${SERVICE_TOKEN:legacykeep-service-token}

# =============================================================================
# External Service Integration
# =============================================================================

# Auth Service
legacy.services.auth.url=${AUTH_SERVICE_URL:http://localhost:8081/api/v1}
legacy.services.auth.timeout=5000

# User Service
legacy.services.user.url=${USER_SERVICE_URL:http://localhost:8082/api/v1}
legacy.services.user.timeout=5000

# Relationship Service
legacy.services.relationship.url=${RELATIONSHIP_SERVICE_URL:http://localhost:8084/api/v1}
legacy.services.relationship.timeout=5000

# Notification Service
legacy.services.notification.url=${NOTIFICATION_SERVICE_URL:http://localhost:8083/api/v1}
legacy.services.notification.timeout=5000

# =============================================================================
# Legacy Content Configuration
# =============================================================================

# Content Settings
legacy.content.max-title-length=255
legacy.content.max-description-length=2000
legacy.content.max-tags=10
legacy.content.default-privacy-level=FAMILY

# Inheritance Settings
legacy.inheritance.auto-accept-enabled=false
legacy.inheritance.notification-enabled=true
legacy.inheritance.expiry-days=30

# Search Configuration
legacy.search.enabled=true
legacy.search.max-results=100
legacy.search.default-page-size=20

# =============================================================================
# Monitoring & Actuator
# =============================================================================

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Health Checks
management.health.kafka.enabled=true
management.health.redis.enabled=true
management.health.db.enabled=true

# =============================================================================
# Logging Configuration
# =============================================================================

# Logging Levels
logging.level.com.legacykeep.legacy=INFO
logging.level.org.springframework.kafka=WARN
logging.level.org.apache.kafka=WARN

# Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# =============================================================================
# Swagger/OpenAPI Configuration
# =============================================================================

# Swagger UI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true

# =============================================================================
# Development Configuration
# =============================================================================

# Development Settings
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# =============================================================================
# Testing Configuration
# =============================================================================

# Test Database (when running tests)
spring.test.database.replace=none
